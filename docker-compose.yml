# https://github.com/khezen/compose-postgres
version: '3.5'

services:
  rails:
    build:
      context: "."
      args:
        - "UID=${UID:-1000}"
        - "GID=${GID:-1000}"
        - "RAILS_ENV=${RAILS_ENV:-production}"
        - "NODE_ENV=${NODE_ENV:-production}"
        # - "TENDER_LIST_DATABASE_PASSWORD=${TENDER_LIST_DATABASE_PASSWORD:-1234}"
    environment:
      - "RAILS_ENV=${RAILS_ENV:-production}"
      - "TENDER_LIST_DATABASE_PASSWORD=${TENDER_LIST_DATABASE_PASSWORD:-1234}"
      - "RAILS_MASTER_KEY=${RAILS_MASTER_KEY:-1234}"
    ports:
      - "3000:3000"
    depends_on:
      - "postgres"
      - "elasticsearch"
      # - "redis"
    tty: true
    volumes:
      - .:/app

  postgres:
    container_name: postgres_container
    image: postgres
    environment:
      POSTGRES_USER: ${POSTGRES_USER:-postgres}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-1234}
      PGDATA: /data/postgres
    volumes:
      - postgres:/data/postgres
    ports:
      - "5432:5432"
    # networks:
    #   - postgres
    # restart: unless-stopped

  pgadmin:
    container_name: pgadmin_container
    image: dpage/pgadmin4
    # user: "1000:1000"
    environment:
      PGADMIN_DEFAULT_EMAIL: ${PGADMIN_DEFAULT_EMAIL:-pgadmin4@pgadmin.org}
      PGADMIN_DEFAULT_PASSWORD: ${PGADMIN_DEFAULT_PASSWORD:-admin}
      PGADMIN_CONFIG_SERVER_MODE: 'False'
    volumes:
      - pgadmin:/var/lib/pgadmin
    ports:
      - "${PGADMIN_PORT:-5050}:80"
    depends_on:
      - "postgres"
    # networks:
    #   - postgres
    # restart: unless-stopped

  #  https://nginxproxymanager.com/guide/#quick-setup
  # nginx:
  #   image: 'jc21/nginx-proxy-manager:latest'
  #   ports:
  #     - '80:80'
  #     - '81:81'
  #     - '443:443'
  #   volumes:
  #     - .docker/nginx-proxy-manager/data:/data
  #     - .docker/nginx-proxy-manager/letsencrypt:/etc/letsencrypt
  #     - ./public:/data/ngotenders.in/public:ro

  elasticsearch:
    # image: docker.io/bitnami/elasticsearch:8
    image: docker.elastic.co/elasticsearch/elasticsearch:8.5.3
    # image: docker.elastic.co/enterprise-search/enterprise-search:8.5.3
    ports:
      - '9200:9200'
      - '9300:9300'
    # mem_limit: 512m
    environment:
      # - bootstrap.memory_lock=true
      # - ES_JAVA_OPTS=-Xms256m -Xmx256m
      - transport.host=localhost
      - http.cors.enabled=true
      - http.cors.allow-origin=http://127.0.0.1:3004
      - http.cors.allow-headers=X-Requested-With,Content-Type,Content-Length,Authorization
      - discovery.type=single-node
      - ELASTIC_PASSWORD=changeme
      - xpack.security.enabled=true
    ulimits:
      memlock:
        soft: -1
        hard: -1
    volumes:
      # - ./elasticsearch/config/elasticsearch.yml:/usr/share/elasticsearch/config/elasticsearch.yml
      - elasticsearch_data:/usr/share/elasticsearch/data

  webui:
    image: cars10/elasticvue
    ports:
      - '3004:8080'

  caddy:
    image: caddy:latest
    # restart: unless-stopped
    ports:
      - "80:80"
      - "443:443"
      - "443:443/udp"
    volumes:
      - .docker/Caddyfile:/etc/caddy/Caddyfile
      # - $PWD/site:/srv
      - ./public:/data/ngotenders.in/public:ro
      - caddy_data:/data
      - caddy_config:/config

# networks:
#   postgres:
#     driver: bridge

volumes:
  postgres:
  pgadmin:
  elasticsearch_data:
  caddy_data:
  caddy_config:
